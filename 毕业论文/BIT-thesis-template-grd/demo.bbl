% Generated by BUPTThesis.bst, version: 0.2 (2009/01/25)
\begin{thebibliography}{10}

\bibitem{chess2011software}
Chess~B, Arkin~B.
Software security in practice~[J].
IEEE Security \& Privacy, 2011, 9~(2):  89--92.

\bibitem{shan2002}
单国栋, 戴英侠, 王航.
计算机漏洞分类研究~[J].
计算机工程, 2002, 28~(10):  3--6.

\bibitem{vassilev2014importance}
Vassilev~A, Hall~T~A.
The importance of entropy to information security~[J].
Computer, 2014, 47~(2):  78--81.

\bibitem{li2017wannacry}
李潇, 刘俊奇, 范明翔.
WannaCry 勒索病毒预防及应对策略研究~[J].
电脑知识与技术: 学术交流, 2017, 13~(7):  19--20.

\bibitem{zhang2014}
张钢.
[S.~l.]: .
[s.~n.], 2014.

\bibitem{hovemeyer2005evaluating}
Hovemeyer~D, Spacco~J, Pugh~W.
Evaluating and tuning a static analysis to find null pointer bugs~[C].
In ACM SIGSOFT Software Engineering Notes, 2005:  13--19.

\bibitem{gong2008}
宫云战, 赵瑞莲, 张威.
软件测试教程~[M].
2008.

\bibitem{gong2006}
宫云战.
软件测试~[M].
国防工业出版, 2006.

\bibitem{coverity2009}
Coverity Scan Report.
\url{https://www.synopsys.com/blogs/software-security/}.

\bibitem{osman2016tracking}
Osman~H, Leuenberger~M, Lungu~M, et~al.
Tracking null checks in open-source Java systems~[C].
In Software Analysis, Evolution, and Reengineering (SANER), 2016 IEEE 23rd
  International Conference on, 2016:  304--313.

\bibitem{wei2009safety}
Wei~P.
The Safety Of Software Design Loophole Dynamic State Examination Technique
  Analysis [J]~[J].
CD Technology, 2009, 4:  015.

\bibitem{lin2008static}
Lin~Z, Qing-kai~Z.
Static detecting techniques of software security flaws~[J].
Computer Engineering, 2008, 34~(12):  157--159.

\bibitem{king1976symbolic}
King~J~C.
Symbolic execution and program testing~[J].
Communications of the ACM, 1976, 19~(7):  385--394.

\bibitem{bush2000static}
Bush~W~R, Pincus~J~D, Sielaff~D~J.
A static analyzer for finding dynamic programming errors~[J].
Software-Practice and Experience, 2000, 30~(7):  775--802.

\bibitem{jhala2009software}
Jhala~R, Majumdar~R.
Software model checking~[J].
ACM Computing Surveys (CSUR), 2009, 41~(4): ~21.

\bibitem{ball2001automatically}
Ball~T, Rajamani~S~K.
Automatically validating temporal safety properties of interfaces~[C].
In Proceedings of the 8th international SPIN workshop on Model checking of
  software, 2001:  103--122.

\bibitem{tiwari2007logical}
Tiwari~A, Gulwani~S.
Logical interpretation: Static program analysis using theorem proving~[C].
In International Conference on Automated Deduction, 2007:  147--166.

\bibitem{flanagan2013pldi}
Flanagan~C, Leino~K R~M, Lillibridge~M, et~al.
PLDI 2002: Extended static checking for Java~[J].
ACM Sigplan Notices, 2013, 48~(4S):  22--33.

\bibitem{cousot1977abstract}
Cousot~P, Cousot~R.
Abstract interpretation: a unified lattice model for static analysis of
  programs by construction or approximation of fixpoints~[C].
In Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of
  programming languages, 1977:  238--252.

\bibitem{madhavan2011null}
Madhavan~R, Komondoor~R.
Null dereference verification via over-approximated weakest pre-conditions
  analysis~[J].
ACM Sigplan Notices, 2011, 46~(10):  1033--1052.

\bibitem{xie2007saturn}
Xie~Y, Aiken~A.
Saturn: A scalable framework for error detection using boolean
  satisfiability~[J].
ACM Transactions on Programming Languages and Systems (TOPLAS), 2007, 29~(3):
  ~16.

\bibitem{wang2015}
王锐强.
基于判断逻辑的空指针引用模式检测~[D].
[S.~l.]: 北京邮电大学, 2015.

\bibitem{wangxu2015}
王旭.
基于控制流分析和数据流分析的Java程序静态检测方法的研究~[D].
[S.~l.]: 西安电子科技大学, 2015.

\bibitem{loginov2008verifying}
Loginov~A, Yahav~E, Chandra~S, et~al.
Verifying dereference safety via expanding-scope analysis~[C].
In Proceedings of the 2008 international symposium on Software testing and
  analysis, 2008:  213--224.

\bibitem{wala}
Wala.
\url{http://wala.sourceforge.net}.

\bibitem{nanda2009accurate}
Nanda~M~G, Sinha~S.
Accurate interprocedural null-dereference analysis for Java~[C].
In Proceedings of the 31st International Conference on Software Engineering,
  2009:  133--143.

\bibitem{yangrui2012}
杨睿.
数组空指针故障的静态测试方法与实现~[D].
[S.~l.]: 北京邮电大学, 2012.

\bibitem{jiang2017}
姜淑娟, 王兴亚, 张艳梅, et~al.
空指针异常的自动故障定位方法~[J].
通信学报, 2017, 36~(1):  18--29.

\bibitem{hovemeyer2007finding}
Hovemeyer~D, Pugh~W.
Finding more null pointer bugs, but not too many~[C].
In Proceedings of the 7th ACM SIGPLAN-SIGSOFT workshop on Program analysis for
  software tools and engineering, 2007:  9--14.

\bibitem{white2016deep}
White~M, Tufano~M, Vendome~C, et~al.
Deep learning code fragments for code clone detection~[C].
In Proceedings of the 31st IEEE/ACM International Conference on Automated
  Software Engineering, 2016:  87--98.

\bibitem{dai2016discriminative}
Dai~H, Dai~B, Song~L.
Discriminative embeddings of latent variable models for structured data~[C].
In International Conference on Machine Learning, 2016:  2702--2711.

\bibitem{DBLP:journals/corr/abs-1708-06525}
Xu~X, Liu~C, Feng~Q, et~al.
Neural Network-based Graph Embedding for Cross-Platform Binary Code Similarity
  Detection~[J/OL].
CoRR, 2017, abs/1708.06525.
\url{http://arxiv.org/abs/1708.06525}.

\bibitem{rutar2004comparison}
Rutar~N, Almazan~C~B, Foster~J~S.
A comparison of bug finding tools for Java~[C].
In Software Reliability Engineering, 2004. ISSRE 2004. 15th International
  Symposium on, 2004:  245--256.

\bibitem{owasp}
Owasp.
\url{https://www.owasp.org/index.php/Main_Page}.

\bibitem{nist}
NIST.
\url{https://www.nist.gov/}.

\bibitem{vallee2010soot}
Vall{\'e}e-Rai~R, Co~P, Gagnon~E, et~al.
Soot: A Java bytecode optimization framework~[C].
In CASCON First Decade High Impact Papers, 2010:  214--224.

\bibitem{leslie2001spectrum}
Leslie~C, Eskin~E, Noble~W~S.
The spectrum kernel: A string kernel for SVM protein
  classification~[M]~//~Leslie~C, Eskin~E, Noble~W~S.
 Biocomputing 2002.
World Scientific, 2001: 2001: 564--575.

\bibitem{shervashidze2009efficient}
Shervashidze~N, Vishwanathan~S, Petri~T, et~al.
Efficient graphlet kernels for large graph comparison~[C].
In Artificial Intelligence and Statistics, 2009:  488--495.

\bibitem{jaakkola1999using}
Jaakkola~T~S, Diekhans~M, Haussler~D.
Using the Fisher kernel method to detect remote protein homologies.~[C].
In ISMB, 1999:  149--158.

\bibitem{smola2007hilbert}
Smola~A, Gretton~A, Song~L, et~al.
A Hilbert space embedding for distributions~[C].
In International Conference on Algorithmic Learning Theory, 2007:  13--31.

\bibitem{wainwright2008graphical}
Wainwright~M~J, Jordan~M~I, et~al.
Graphical models, exponential families, and variational inference~[J].
Foundations and Trends{\textregistered} in Machine Learning, 2008, 1~(1--2):
  1--305.

\bibitem{kohonen1988introduction}
Kohonen~T.
An introduction to neural computing~[J].
Neural networks, 1988, 1~(1):  3--16.

\bibitem{mcculloch1943logical}
McCulloch~W~S, Pitts~W.
A logical calculus of the ideas immanent in nervous activity~[J].
The bulletin of mathematical biophysics, 1943, 5~(4):  115--133.

\end{thebibliography}
